[{"C:\\Users\\kwon\\Desktop\\Projects\\DreamCoding2\\REACT-Basic\\template\\src\\index.js":"1","C:\\Users\\kwon\\Desktop\\Projects\\DreamCoding2\\REACT-Basic\\template\\src\\app.jsx":"2","C:\\Users\\kwon\\Desktop\\Projects\\DreamCoding2\\REACT-Basic\\habit-tracker\\src\\index.js":"3","C:\\Users\\kwon\\Desktop\\Projects\\DreamCoding2\\REACT-Basic\\habit-tracker\\src\\app.jsx":"4","C:\\Users\\kwon\\Desktop\\Projects\\DreamCoding2\\REACT-Basic\\habit-tracker\\src\\components\\Habit.jsx":"5","C:\\Users\\kwon\\Desktop\\Projects\\DreamCoding2\\REACT-Basic\\habit-tracker\\src\\components\\Habits.jsx":"6","C:\\Users\\kwon\\Desktop\\Projects\\DreamCoding2\\REACT-Basic\\habit-tracker\\src\\components\\navbar.jsx":"7","C:\\Users\\kwon\\Desktop\\Projects\\DreamCoding2\\REACT-Basic\\habit-tracker\\src\\components\\habitAddForm.jsx":"8"},{"size":220,"mtime":1608296032840,"results":"9","hashOfConfig":"10"},{"size":101,"mtime":1608296074756,"results":"11","hashOfConfig":"10"},{"size":276,"mtime":1608801576263,"results":"12","hashOfConfig":"13"},{"size":4354,"mtime":1608809283571,"results":"14","hashOfConfig":"13"},{"size":1581,"mtime":1608810824302,"results":"15","hashOfConfig":"13"},{"size":4462,"mtime":1608809688359,"results":"16","hashOfConfig":"13"},{"size":363,"mtime":1608809372898,"results":"17","hashOfConfig":"13"},{"size":2623,"mtime":1608956657608,"results":"18","hashOfConfig":"13"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ca24dh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"462s7",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\Users\\kwon\\Desktop\\Projects\\DreamCoding2\\REACT-Basic\\template\\src\\index.js",[],"C:\\Users\\kwon\\Desktop\\Projects\\DreamCoding2\\REACT-Basic\\template\\src\\app.jsx",[],"C:\\Users\\kwon\\Desktop\\Projects\\DreamCoding2\\REACT-Basic\\habit-tracker\\src\\index.js",[],"C:\\Users\\kwon\\Desktop\\Projects\\DreamCoding2\\REACT-Basic\\habit-tracker\\src\\app.jsx",[],"C:\\Users\\kwon\\Desktop\\Projects\\DreamCoding2\\REACT-Basic\\habit-tracker\\src\\components\\Habit.jsx",[],"C:\\Users\\kwon\\Desktop\\Projects\\DreamCoding2\\REACT-Basic\\habit-tracker\\src\\components\\Habits.jsx",[],"C:\\Users\\kwon\\Desktop\\Projects\\DreamCoding2\\REACT-Basic\\habit-tracker\\src\\components\\navbar.jsx",[],"C:\\Users\\kwon\\Desktop\\Projects\\DreamCoding2\\REACT-Basic\\habit-tracker\\src\\components\\habitAddForm.jsx",["36"],"import React, { memo, PureComponent } from 'react';\r\n\r\nconst HabitAddForm = memo((props) => {\r\n  const formRef = React.createRef(); // React.createRef()를 사용하게되면\r\n  // 함수가 반복해서 실행될 때마다 변수가 생성되는 비효율적인 일이 발생한다.\r\n  // 따라서 이를 해결해주기 위해 react Hook 을 사용하는 코드도 고려해야한다.\r\n  const inputRef = React.createRef();\r\n  const onSubmit = (e) => {\r\n    e.preventDefault(); // 브라우저 기본 기능을 취소 ( 페이지 리로딩 방지)\r\n    const name = inputRef.current.value;\r\n    name && props.onAdd(name);\r\n    //this.inputRef.current.value = ''; // 추가한뒤 입력한 값 초기화\r\n    formRef.current.reset(); // 초기화 동일하다 (정석)\r\n  };\r\n  return (\r\n    <form ref={formRef} className='add-form' onSubmit={onSubmit}>\r\n      <input\r\n        ref={inputRef} // input이라는 요소가 inputRef와 연결이 되어서 이 요소에 접근해서 해당하는 데이터를 읽어올 수 있다.\r\n        type='text'\r\n        className='add-input'\r\n        placeholder='Habit'\r\n      />\r\n      <button className='add-button'>Add</button>\r\n    </form>\r\n  );\r\n});\r\n\r\n// class HabitAddForm extends PureComponent {\r\n//   formRef = React.createRef();\r\n//   inputRef = React.createRef();\r\n//   // DOM 요소에 접근해서 그 요소에 value 나 클릭 이벤트나 이런 걸 등록했던 것 처럼\r\n//   // 리액트는 바로 DOM 요소에 접근하지 않고 필요할 때 리액트에서 제공하는 createRef를 이용해서 멤버변수를 정의 한다음에\r\n//   // 그것을 원하는 해당하는 리액트 컴포넌트에 ref로 연결하면 된다.\r\n\r\n//   onSubmit = (e) => {\r\n//     e.preventDefault(); // 브라우저 기본 기능을 취소 ( 페이지 리로딩 방지)\r\n//     const name = this.inputRef.current.value;\r\n//     name && this.props.onAdd(name);\r\n//     //this.inputRef.current.value = ''; // 추가한뒤 입력한 값 초기화\r\n//     this.formRef.current.reset(); // 초기화 동일하다 (정석)\r\n//   };\r\n//   render() {\r\n//     return (\r\n//       <form ref={this.formRef} className='add-form' onSubmit={this.onSubmit}>\r\n//         <input\r\n//           ref={this.inputRef} // input이라는 요소가 inputRef와 연결이 되어서 이 요소에 접근해서 해당하는 데이터를 읽어올 수 있다.\r\n//           type='text'\r\n//           className='add-input'\r\n//           placeholder='Habit'\r\n//         />\r\n//         <button className='add-button'>Add</button>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default HabitAddForm;\r\n",{"ruleId":"37","severity":1,"message":"38","line":1,"column":23,"nodeType":"39","messageId":"40","endLine":1,"endColumn":36},"no-unused-vars","'PureComponent' is defined but never used.","Identifier","unusedVar"]